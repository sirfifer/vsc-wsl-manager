{
  "name": "vsc-wsl-manager",
  "displayName": "VSC WSL Manager",
  "description": "Comprehensive WSL distribution management for VS Code with security-first design",
  "version": "1.0.0",
  "publisher": "your-publisher-name",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/vsc-wsl-manager"
  },
  "bugs": {
    "url": "https://github.com/your-username/vsc-wsl-manager/issues"
  },
  "homepage": "https://github.com/your-username/vsc-wsl-manager#readme",
  "license": "MIT",
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#0066CC",
    "theme": "dark"
  },
  "keywords": [
    "wsl",
    "windows subsystem for linux",
    "distribution",
    "manager",
    "terminal"
  ],
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Debuggers",
    "Programming Languages"
  ],
  "activationEvents": [
    "onView:wslDistributions",
    "onCommand:wsl-manager.refreshDistributions"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "wsl-manager.refreshDistributions",
        "title": "WSL: Refresh Distributions",
        "icon": "$(refresh)"
      },
      {
        "command": "wsl-manager.createDistribution",
        "title": "WSL: Create New Distribution",
        "icon": "$(add)"
      },
      {
        "command": "wsl-manager.importDistribution",
        "title": "WSL: Import Distribution from TAR"
      },
      {
        "command": "wsl-manager.exportDistribution",
        "title": "WSL: Export Distribution to TAR"
      },
      {
        "command": "wsl-manager.deleteDistribution",
        "title": "WSL: Delete Distribution",
        "icon": "$(trash)"
      },
      {
        "command": "wsl-manager.openTerminal",
        "title": "WSL: Open Terminal",
        "icon": "$(terminal)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "wsl-manager",
          "title": "WSL Manager",
          "icon": "resources/wsl-icon.svg"
        }
      ]
    },
    "views": {
      "wsl-manager": [
        {
          "id": "wslDistributions",
          "name": "WSL Distributions",
          "icon": "$(server)",
          "contextualTitle": "WSL Distributions"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "wsl-manager.refreshDistributions",
          "when": "view == wslDistributions",
          "group": "navigation"
        },
        {
          "command": "wsl-manager.createDistribution",
          "when": "view == wslDistributions",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "wsl-manager.openTerminal",
          "when": "view == wslDistributions && viewItem == distribution",
          "group": "inline"
        },
        {
          "command": "wsl-manager.exportDistribution",
          "when": "view == wslDistributions && viewItem == distribution"
        },
        {
          "command": "wsl-manager.deleteDistribution",
          "when": "view == wslDistributions && viewItem == distribution"
        }
      ]
    },
    "configuration": {
      "title": "WSL Manager",
      "properties": {
        "wsl-manager.defaultDistributionPath": {
          "type": "string",
          "default": "",
          "description": "Default path for storing WSL distributions"
        },
        "wsl-manager.autoRegisterProfiles": {
          "type": "boolean",
          "default": true,
          "description": "Automatically register WSL distributions as terminal profiles"
        },
        "wsl-manager.logging.level": {
          "type": "string",
          "enum": [
            "debug",
            "info",
            "warn",
            "error",
            "none"
          ],
          "default": "info",
          "description": "Logging level for WSL Manager"
        },
        "wsl-manager.logging.enableFileLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable logging to file"
        },
        "wsl-manager.logging.logDirectory": {
          "type": "string",
          "description": "Directory for log files (defaults to user data directory)"
        },
        "wsl-manager.security.restrictedOperations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "create",
              "delete",
              "import",
              "export"
            ]
          },
          "default": [
            "delete"
          ],
          "description": "Operations that require user confirmation"
        },
        "wsl-manager.security.enableSecurityLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable security event logging"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:watch:verbose": "jest --watch --verbose --detectOpenHandles",
    "test:debug": "node --inspect-brk ./node_modules/.bin/jest --runInBand",
    "test:performance": "jest --testNamePattern='performance' --verbose",
    "test:security": "jest --testPathPattern=security --verbose",
    "test:affected": "node scripts/test-affected.js",
    "dev": "concurrently -n \"compile,test\" -c \"blue,green\" \"npm run watch\" \"npm run test:watch:verbose\"",
    "dev:debug": "concurrently -n \"compile,logs\" -c \"blue,yellow\" \"npm run watch\" \"npm run logs:stream\"",
    "logs:stream": "node scripts/stream-logs.js",
    "logs:tail": "node scripts/tail-logs.js",
    "diagnostics": "node scripts/diagnostics.js",
    "perf:report": "node scripts/perf-report.js",
    "clean": "rimraf out *.log coverage .vscode-test",
    "clean:logs": "rimraf logs/*.log",
    "docs": "typedoc",
    "docs:watch": "typedoc --watch"
  },
  "devDependencies": {
    "@types/jest": "^29.5.11",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "concurrently": "^8.2.2",
    "rimraf": "^5.0.5",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.28.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "typedoc": "^0.25.13",
    "typedoc-plugin-markdown": "^3.17.1",
    "typescript": "^4.9.3"
  }
}
